[
  {
    "title": "üéûÔ∏è Pr√©sentation des animations",
    "content": "Le syst√®me d'animation permet de poser, modifier et visualiser des tiles anim√©es directement dans l'√©diteur. Celles-ci fonctionnent sur une timeline ind√©pendante par animation et sont int√©gr√©es dans le niveau via le m√™me syst√®me de layers. Pour cr√©er une animation, allez dans Animation > New . Renseignez un nom unique, une dur√©e (en secondes) et une vitesse (facteur de lecture). Une fois cr√©√©e, la timeline s'affiche en bas, et l' √©diteur d'animation en haut √† droite. Vous pouvez aussi ouvrir l'√©diteur d'animation depuis Animation > Editor . Il vous permet de : ‚Ä¢ Renommer l'animation ‚Ä¢ Modifier sa dur√©e ‚Ä¢ Changer sa vitesse (par d√©faut 1s sur la timeline = 1s r√©el) ‚Ä¢ Changer l'animation courante via un menu d√©roulant ‚Ä¢ Supprimer une animation ‚Ä¢ Afficher les keyframes sur la carte en temps r√©el (affichage en cyan) La timeline permet de poser des keyframes dans le temps. Chaque frame peut contenir plusieurs modifications visuelles (pose ou suppression de tiles). ‚Ä¢ Clic gauche: d√©placer le",
    "url": "/pages/animations.html#intro"
  },
  {
    "title": "üß∞ Animation Editor",
    "content": "Pour cr√©er une animation, allez dans Animation > New . Renseignez un nom unique, une dur√©e (en secondes) et une vitesse (facteur de lecture). Une fois cr√©√©e, la timeline s'affiche en bas, et l' √©diteur d'animation en haut √† droite. Vous pouvez aussi ouvrir l'√©diteur d'animation depuis Animation > Editor . Il vous permet de : ‚Ä¢ Renommer l'animation ‚Ä¢ Modifier sa dur√©e ‚Ä¢ Changer sa vitesse (par d√©faut 1s sur la timeline = 1s r√©el) ‚Ä¢ Changer l'animation courante via un menu d√©roulant ‚Ä¢ Supprimer une animation ‚Ä¢ Afficher les keyframes sur la carte en temps r√©el (affichage en cyan)",
    "url": "/pages/animations.html#animation-editor"
  },
  {
    "title": "‚è±Ô∏è Timeline",
    "content": "La timeline permet de poser des keyframes dans le temps. Chaque frame peut contenir plusieurs modifications visuelles (pose ou suppression de tiles). ‚Ä¢ Clic gauche: d√©placer le curseur ‚Ä¢ Clic gauche gliss√©: d√©placer le curseur ‚Ä¢ Clic droitsur une keyframe : la s√©lectionner ‚Ä¢ Clic droit gliss√©: s√©lectionner plusieurs keyframes ‚Ä¢ Suppr: supprimer les keyframes s√©lectionn√©es ‚Ä¢ Shift + Drag gauche: d√©placer les keyframes s√©lectionn√©es ‚Ä¢ Molette: zoom dans la timeline ‚Ä¢ Espace: jouer ou mettre en pause l'animation ‚Ä¢ +et-: d√©placer le curseur image par image Les boutons de la barre de timeline permettent de : ‚Ä¢ ‚ñ∂Ô∏èPlay ‚Ä¢ ‚è∏Ô∏èPause ‚Ä¢ üîÅLoop / Unloop ‚Ä¢ ‚ûñHidela timeline ‚Ä¢ üîµRecord: active l'enregistrement des poses Dans l'√©diteur, les tiles anim√©es sont dessin√©es sur le m√™me layer que les tiles classiques. Elles sont simplement affich√©es par-dessus les tiles statiques pr√©sentes √† la m√™me position. Cela signifie que : ‚Ä¢ Si une tile statique est d√©j√† plac√©e sur un layer, et qu'une tile anim√©e est ajou",
    "url": "/pages/animations.html#timeline"
  },
  {
    "title": "üí° Affichage et Overlay",
    "content": "Dans l'√©diteur, les tiles anim√©es sont dessin√©es sur le m√™me layer que les tiles classiques. Elles sont simplement affich√©es par-dessus les tiles statiques pr√©sentes √† la m√™me position. Cela signifie que : ‚Ä¢ Si une tile statique est d√©j√† plac√©e sur un layer, et qu'une tile anim√©e est ajout√©e au m√™me endroit sur le m√™me layer, la tile anim√©e sera visible √† la place de la statique. ‚Ä¢ Inversement, si vous ajoutez une tile statique par-dessus une tile anim√©e d√©j√† pr√©sente, elle risque de ne pas √™tre visible, car masqu√©e par l'animation lors de sa lecture. Pour vous √©viter ce genre de conflit, l'√©diteur affiche un aper√ßu jaune dans les zones o√π une animation est d√©j√† pr√©sente sur le layer courant. Cela vous alerte que vous √™tes sur le point de poser une tuile l√† o√π une animation s'ex√©cute d√©j√†.",
    "url": "/pages/animations.html"
  },
  {
    "title": "üéÆ Int√©gration en mode Play",
    "content": "Lors du passage en mode Play, les animations se comportent comme dans l'√©diteur : une animation en pause le restera, une animation en loop continuera √† jouer.",
    "url": "/pages/animations.html#playmode-integration"
  },
  {
    "title": "üîå Contr√¥le via l'√©diteur nodal",
    "content": "Voici les nodes disponibles pour contr√¥ler les animations : ‚Ä¢ Play Animation‚Äî D√©marre l'animation √† 0s ‚Ä¢ Set Animation Time‚Äî Modifie manuellement la position temporelle ‚Ä¢ Stop Animation,Pause Animation ‚Ä¢ Loop / Unloop Animation ‚Ä¢ Set Animation Speed,Get Animation Speed",
    "url": "/pages/animations.html"
  },
  {
    "title": "Envie d'en savoir plus ?",
    "content": "Consultez les pages suivantes pour explorer les fonctionnalit√©s cl√©s de l'√©diteur : ‚Ä¢ üîßInterface‚Äî Comprendre les outils de dessin, la gestion des layers et le fonctionnement du viewport. ‚Ä¢ üéÆMode Play‚Äî Tester votre niveau avec un personnage jouable et d√©clencher des √©v√©nements de gameplay. ‚Ä¢ üß†√âditeur Nodal‚Äî Prototyper des logiques interactives avec un syst√®me de n≈ìuds visuels.",
    "url": "/pages/animations.html#next-steps"
  },
  {
    "title": "Niveau",
    "content": "Un niveau est stock√© en JSON, d√©crivant l'ensemble des calques, collisions, points de localisation, lumi√®res, √©tat de l'√©diteur et chemin vers le LevelGraph. // Extrait d'un fichier level.json { \"layers\": [ { \"opacity\": 1.0, \"tiles\": [ { \"TileMap\": \"dungeon\", \"x\": 18, \"y\": 19, \"Originalx\": 1, \"Originaly\": 1, \"rotation\": 0, \"flipHorizontal\": false, \"flipVertical\": false }, /* ‚Ä¶ autres tuiles ‚Ä¶ */ ] }, /* layers 1 √† 8 vides ou partiellement remplies */ ], \"currentLayer\": 0, \"currentTool\": \"LocationPoint\", \"viewport\": { \"panningOffset\": [-456.0, -508.5], \"zoom\": 2.5 }, /* ‚Ä¶ autres sections ‚Ä¶ */ } ‚Ä¢ x, y: position de la tuile dans le monde (grille) ‚Ä¢ Originalx, Originaly: indices de la tuile dans la source TileMap ‚Ä¢ rotation: angle en degr√©s (0, 90, 180, 270) ‚Ä¢ flipHorizontal/flipVertical: retournement La section tilePalette d√©crit les tilesets charg√©s : \"tilePalette\": { \"currentTileMapIndex\": 0, \"tileMaps\": [ { \"name\": \"dungeon\", \"filepath\": \"C:\\\\‚Ä¶\\\\Dungeon Tile Set.png\", \"tileSize\": 16, ",
    "url": "/pages/data-format.html#level"
  },
  {
    "title": "üìê Coordonn√©es & dimensions",
    "content": "‚Ä¢ x, y: position de la tuile dans le monde (grille) ‚Ä¢ Originalx, Originaly: indices de la tuile dans la source TileMap ‚Ä¢ rotation: angle en degr√©s (0, 90, 180, 270) ‚Ä¢ flipHorizontal/flipVertical: retournement",
    "url": "/pages/data-format.html#coords"
  },
  {
    "title": "TileMaps",
    "content": "La section tilePalette d√©crit les tilesets charg√©s : \"tilePalette\": { \"currentTileMapIndex\": 0, \"tileMaps\": [ { \"name\": \"dungeon\", \"filepath\": \"C:\\\\‚Ä¶\\\\Dungeon Tile Set.png\", \"tileSize\": 16, \"colorKey\": null, \"zoom\": 1.0, \"panningOffset\": [0, 0] } ] }",
    "url": "/pages/data-format.html#tilemaps"
  },
  {
    "title": "Animations",
    "content": "La section animations liste chaque animation avec son nom, dur√©e, vitesse, boucle, √©tat de lecture et ses keyframes : \"animations\": [ { \"name\": \"animation_1\", \"end\": 2.0, \"speed\": 1.0, \"loop\": false, \"play\": false, \"keyframes\": [] }, { \"name\": \"test\", \"end\": 1.5, \"speed\": 2.0, \"loop\": true, \"play\": true, \"keyframes\": [ { \"tile_map\": \"dungeon\", \"x\": 24, \"y\": 20, \"layer\": 0, \"time\": 0.402, \"Originalx\": 3, \"Originaly\": 5, \"rotation\": 0, \"flipH\": false, \"flipV\": false }, /* ‚Ä¶ autres keyframes ‚Ä¶ */ ] } ] Quand vous supprimez une tuile anim√©e, un keyframe de suppression est g√©n√©r√© : { \"tile_map\": \"\", \"x\": 24, \"y\": 20, \"layer\": 0, \"time\": 1.17, \"Originalx\": 0, \"Originaly\": 0, \"rotation\": 0, \"flipH\": false, \"flipV\": false }",
    "url": "/pages/data-format.html#animations"
  },
  {
    "title": "üîë Keyframes de suppression",
    "content": "Quand vous supprimez une tuile anim√©e, un keyframe de suppression est g√©n√©r√© : { \"tile_map\": \"\", \"x\": 24, \"y\": 20, \"layer\": 0, \"time\": 1.17, \"Originalx\": 0, \"Originaly\": 0, \"rotation\": 0, \"flipH\": false, \"flipV\": false }",
    "url": "/pages/data-format.html#anim-keyframes"
  },
  {
    "title": "üí° Lumi√®res",
    "content": "Les sources lumineuses sont enregistr√©es dans la section lights du JSON : \"lights\": [ { \"x\": 376.4, \"y\": 367.4, \"radius\": 59.79, \"color\": [255,180,80], \"blink\": false } /* ‚Ä¶ autres lights ‚Ä¶ */ ] ‚Ä¢ x, y: position dans le monde (coordonn√©es du centre) ‚Ä¢ radius: rayon d'√©clairage ‚Ä¢ color: couleur RGB ‚Ä¢ blink: clignotement activ√© ou non",
    "url": "/pages/data-format.html#lights"
  },
  {
    "title": "LevelGraph (Nodes)",
    "content": "Le chemin vers le fichier .lvg du graphe nodal est indiqu√© en fin de JSON : \"levelGraph\": \"C:\\\\‚Ä¶\\\\test_graph.lvg\"",
    "url": "/pages/data-format.html#nodes"
  },
  {
    "title": "üóÉÔ∏è Format des fichiers LevelGraph (.lvg)",
    "content": "Le fichier .lvg stocke l'ensemble des graphes nodaux d'un niveau. Chaque graphe correspond √† un rectangle de collision dans l'√©diteur et contient des n≈ìuds connect√©s entre eux pour d√©finir des logiques de gameplay. { \"graphs\": [ { \"rect_id\": \"UUID_du_Rectangle\", \"nodes\": [...], \"connections\": [...] } ] } ‚Ä¢ rect_id‚Äî Identifiant unique du rectangle de collision associ√©. ‚Ä¢ nodes‚Äî Liste des n≈ìuds plac√©s dans ce graphe, avec leur position et param√®tres. ‚Ä¢ connections‚Äî Connexions entre les n≈ìuds via leurs pins (exec ou data). Voici un exemple de graphe associ√© √† un rectangle de collision : { \"rect_id\": \"2bfc28a5-7d5a-4fa4-8d41-81fc045b16f2\", \"nodes\": [ { \"node_id\": \"on_enter_197_226\", \"label\": \"On Enter\", \"pos\": [197, 226], \"properties\": {} }, { \"node_id\": \"Set SpawnPoint_670_244\", \"label\": \"Set SpawnPoint\", \"pos\": [670, 244], \"properties\": { \"choice\": \"point_0\" } }, { \"node_id\": \"Sequence_437_261\", \"label\": \"Sequence\", \"pos\": [437, 261], \"properties\": {} }, { \"node_id\": \"Teleport_923_339\", ",
    "url": "/pages/data-format.html"
  },
  {
    "title": "üîå Structure des donn√©es",
    "content": "{ \"graphs\": [ { \"rect_id\": \"UUID_du_Rectangle\", \"nodes\": [...], \"connections\": [...] } ] } ‚Ä¢ rect_id‚Äî Identifiant unique du rectangle de collision associ√©. ‚Ä¢ nodes‚Äî Liste des n≈ìuds plac√©s dans ce graphe, avec leur position et param√®tres. ‚Ä¢ connections‚Äî Connexions entre les n≈ìuds via leurs pins (exec ou data).",
    "url": "/pages/data-format.html"
  },
  {
    "title": "üìÑ Exemple complet",
    "content": "Voici un exemple de graphe associ√© √† un rectangle de collision : { \"rect_id\": \"2bfc28a5-7d5a-4fa4-8d41-81fc045b16f2\", \"nodes\": [ { \"node_id\": \"on_enter_197_226\", \"label\": \"On Enter\", \"pos\": [197, 226], \"properties\": {} }, { \"node_id\": \"Set SpawnPoint_670_244\", \"label\": \"Set SpawnPoint\", \"pos\": [670, 244], \"properties\": { \"choice\": \"point_0\" } }, { \"node_id\": \"Sequence_437_261\", \"label\": \"Sequence\", \"pos\": [437, 261], \"properties\": {} }, { \"node_id\": \"Teleport_923_339\", \"label\": \"Teleport\", \"pos\": [923, 339], \"properties\": { \"choice\": \"point_0\" } }, { \"node_id\": \"Print Console_675_408\", \"label\": \"Print Console\", \"pos\": [675, 408], \"properties\": { \"value\": \"Hello World\" } }, { \"node_id\": \"Get Player Health_543_498\", \"label\": \"Get Player Health\", \"pos\": [543, 498], \"properties\": { \"health\": 200 } } ], \"connections\": [ { \"out_node\": \"on_enter_197_226\", \"out_pin\": \"out\", \"in_node\": \"Sequence_437_261\", \"in_pin\": \"in\" }, { \"out_node\": \"Sequence_437_261\", \"out_pin\": \"out0\", \"in_node\": \"Set Spa",
    "url": "/pages/data-format.html#example"
  },
  {
    "title": "üß† Analyse du graphe",
    "content": "‚Ä¢ On Enter‚Äî √âv√©nement d√©clench√© quand le joueur entre dans la collision. ‚Ä¢ Sequence‚Äî Ex√©cute plusieurs branches dans l'ordre : spawnpoint ‚Üí t√©l√©portation ‚Üí console. ‚Ä¢ Set SpawnPoint‚Äî D√©finit le point d'apparition. ‚Ä¢ Teleport‚Äî T√©l√©porte le joueur √† un point nomm√©point_0. ‚Ä¢ Print Console‚Äî Affiche dans la console le texte \"Hello World\" et y ajoute aussi la vie du joueur via le n≈ìudGet Player Health.",
    "url": "/pages/data-format.html"
  },
  {
    "title": "üß© Autre exemple de graphe (collision secondaire)",
    "content": "{ \"rect_id\": \"f4685698-3196-480a-b141-cdff2d4d86c7\", \"nodes\": [ { \"node_id\": \"on_start_320_284\", \"label\": \"On Start\", \"pos\": [320, 284], \"properties\": {} }, { \"node_id\": \"Set MaxHealth_550_354\", \"label\": \"Set MaxHealth\", \"pos\": [550, 354], \"properties\": { \"health\": \"20\" } } ], \"connections\": [ { \"out_node\": \"on_start_320_284\", \"out_pin\": \"out\", \"in_node\": \"Set MaxHealth_550_354\", \"in_pin\": \"in\" } ] } Ce graphe initialise la sant√© du joueur √† 20 au d√©but du mode Play .",
    "url": "/pages/data-format.html"
  },
  {
    "title": "Param√®tres",
    "content": "La section settings stocke les pr√©f√©rences de l'√©diteur pour ce niveau : \"settings\": { \"backgroundIndex\": 21, \"globalIllumination\": 0.0, \"start_mode\": 0, \"showLights\": true, \"showCollisions\": true, \"showLocationPoints\": true, \"playerSpawnPoint\": null, \"keyframeOverlay\": true }",
    "url": "/pages/data-format.html#parameters"
  },
  {
    "title": "Envie d'en savoir plus ?",
    "content": "Consultez les pages suivantes pour explorer les fonctionnalit√©s cl√©s de l'√©diteur : ‚Ä¢ üîßInterface‚Äî Comprendre les outils de dessin, la gestion des layers et le fonctionnement du viewport. ‚Ä¢ üéûÔ∏èAnimations‚Äî Cr√©ez, √©ditez et d√©clenchez des animations dans vos niveaux √† l'aide de la timeline visuelle.",
    "url": "/pages/data-format.html#next-steps"
  },
  {
    "title": "Pr√©sentation g√©n√©rale",
    "content": "Le LevelGraph est un √©diteur nodal int√©gr√© qui permet de d√©finir des logiques personnalis√©es pour chaque collision pr√©sente dans un niveau. Lorsqu'une collision est s√©lectionn√©e, cliquez sur l'ic√¥ne engrenage + cl√© √† molette (en haut √† droite de la section \"Editing\") pour ouvrir l'√©diteur nodal associ√©. ‚Ä¢ Clique droit: ouvrir le menu de cr√©ation de n≈ìud √† l'emplacement du curseur ‚Ä¢ Scroll: zoomer/d√©zoomer dans le menu contextuel ou le viewport ‚Ä¢ Drag avec molette: d√©placer la vue dans le viewport ‚Ä¢ Drag clique gauche: s√©lectionner une ou plusieurs nodes ‚Ä¢ Supr: supprimer les nodes s√©lectionn√©es ‚Ä¢ Ctrl+C / Ctrl+V: copier-coller (fonctionne entre plusieurs LevelGraphs) ‚Ä¢ Drag sur un pin: connecter √† un autre pin ou ouvrir une recherche de node connect√©e ‚Ä¢ FleÃÄche gauche: ouvrir/fermer le panneau de node √† gauche (cat√©goris√©) Chaque n≈ìud repr√©sente une instruction. On distingue 4 grands types : ‚Ä¢ √âv√©nementsüî¥ (rouge) :OnEnter,OnExit,OnStart,OnTick,OnEnd,OnOverlap ‚Ä¢ Actions‚ö™ : ex√©cution d'u",
    "url": "/pages/editor_nodal.html#overview"
  },
  {
    "title": "Navigation et interaction",
    "content": "‚Ä¢ Clique droit: ouvrir le menu de cr√©ation de n≈ìud √† l'emplacement du curseur ‚Ä¢ Scroll: zoomer/d√©zoomer dans le menu contextuel ou le viewport ‚Ä¢ Drag avec molette: d√©placer la vue dans le viewport ‚Ä¢ Drag clique gauche: s√©lectionner une ou plusieurs nodes ‚Ä¢ Supr: supprimer les nodes s√©lectionn√©es ‚Ä¢ Ctrl+C / Ctrl+V: copier-coller (fonctionne entre plusieurs LevelGraphs) ‚Ä¢ Drag sur un pin: connecter √† un autre pin ou ouvrir une recherche de node connect√©e ‚Ä¢ FleÃÄche gauche: ouvrir/fermer le panneau de node √† gauche (cat√©goris√©)",
    "url": "/pages/editor_nodal.html#navigation"
  },
  {
    "title": "Types de n≈ìuds",
    "content": "Chaque n≈ìud repr√©sente une instruction. On distingue 4 grands types : ‚Ä¢ √âv√©nementsüî¥ (rouge) :OnEnter,OnExit,OnStart,OnTick,OnEnd,OnOverlap ‚Ä¢ Actions‚ö™ : ex√©cution d'une t√¢che (ex :Teleport,Play Animation) ‚Ä¢ Settersüîß : modification de donn√©es (ex :Set Player Speed) ‚Ä¢ Gettersüü£ : r√©cup√©ration de donn√©es (ex :Get Player Health) Les pins blancs sont des exec pins pour d√©clencher des suites d'actions. Les pins violets sont des data pins pour transmettre des valeurs.",
    "url": "/pages/editor_nodal.html#node-types"
  },
  {
    "title": "üß† N≈ìuds logiques et √©v√©nements",
    "content": "Pour construire des logiques dynamiques, l'√©diteur propose plusieurs n≈ìuds essentiels. Voici un aper√ßu des plus utilis√©s : ‚Ä¢ If‚Äî compare deux valeurs (AetB) avec un op√©rateur (==,!=,<, etc.) et ex√©cute selon le r√©sultat (sortiestrueoufalse). ‚Ä¢ For‚Äî ex√©cute une bouclenfois. Utilisez la sortielooppour les instructions r√©p√©t√©es n fois, etnextpour continuer √† la fin de la boucle, i correspond √† l'indice de cette derni√®re. ‚Ä¢ Sequence‚Äî d√©clenche une suite d'instructions dans l'ordre (utile pour encha√Æner plusieurs actions). ‚Ä¢ FlipFlop‚Äî alterne entre deux sortiesAetB√† chaque activation. ‚Ä¢ Once‚Äî n'ex√©cute qu'une seule fois, m√™me si le flux repasse dedans. Tr√®s utile pour d√©clencher des actions uniques. ‚Ä¢ Set Variable/Get Variable‚Äî permet de stocker et r√©utiliser des valeurs (√©tats, compteurs, flags...) Chaque √©v√©nement repr√©sente un d√©clencheur automatique. Un m√™me √©v√©nement ne peut √™tre ajout√© qu'une seule fois par LevelGraph. ‚Ä¢ OnEnter‚Äî d√©clench√© lorsque le joueur entre dans la collision ‚Ä¢ O",
    "url": "/pages/editor_nodal.html#logic-nodes"
  },
  {
    "title": "‚öôÔ∏è N≈ìuds de logique",
    "content": "‚Ä¢ If‚Äî compare deux valeurs (AetB) avec un op√©rateur (==,!=,<, etc.) et ex√©cute selon le r√©sultat (sortiestrueoufalse). ‚Ä¢ For‚Äî ex√©cute une bouclenfois. Utilisez la sortielooppour les instructions r√©p√©t√©es n fois, etnextpour continuer √† la fin de la boucle, i correspond √† l'indice de cette derni√®re. ‚Ä¢ Sequence‚Äî d√©clenche une suite d'instructions dans l'ordre (utile pour encha√Æner plusieurs actions). ‚Ä¢ FlipFlop‚Äî alterne entre deux sortiesAetB√† chaque activation. ‚Ä¢ Once‚Äî n'ex√©cute qu'une seule fois, m√™me si le flux repasse dedans. Tr√®s utile pour d√©clencher des actions uniques. ‚Ä¢ Set Variable/Get Variable‚Äî permet de stocker et r√©utiliser des valeurs (√©tats, compteurs, flags...)",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üéØ N≈ìuds d'√©v√©nements",
    "content": "Chaque √©v√©nement repr√©sente un d√©clencheur automatique. Un m√™me √©v√©nement ne peut √™tre ajout√© qu'une seule fois par LevelGraph. ‚Ä¢ OnEnter‚Äî d√©clench√© lorsque le joueur entre dans la collision ‚Ä¢ OnExit‚Äî d√©clench√© √† la sortie du joueur de la collision ‚Ä¢ OnOverlap‚Äî d√©clench√© tant que le joueur reste dans la collision ‚Ä¢ OnStart‚Äî au lancement du mode Play ‚Ä¢ OnTick‚Äî d√©clench√© √† chaque frame (‚ö†Ô∏è √† utiliser avec mod√©ration) ‚Ä¢ OnEnd‚Äî √† la fermeture du mode Play",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üí• Gestion des erreurs",
    "content": "Le syst√®me est dot√© d'un m√©canisme de d√©tection d'erreur runtime . Si une erreur est rencontr√©e pendant l'ex√©cution en mode Play : ‚Ä¢ Le jeu est mis en pause automatiquement ‚Ä¢ Le LevelGraph concern√© est rouvert ‚Ä¢ Un message d'erreur d√©taill√© est affich√© L'ex√©cution du LevelGraph se fait enti√®rement dans le fil principal du jeu, aussi appel√© thread principal. Cela signifie que chaque instruction nodale est trait√©e les unes apr√®s les autres, sans interruption ni ex√©cution en parall√®le. En pratique, cela veut dire que si une s√©rie de n≈ìuds prend trop de temps √† s'ex√©cuter (par exemple une boucle tr√®s longue), le jeu peut se figer temporairement , le temps que toute la cha√Æne soit parcourue. Aucune autre logique ou animation ne pourra s'ex√©cuter durant ce laps de temps. üü¢ Les ex√©cutions sont s√©quentielles : une instruction √† la fois üî¥ Aucune ex√©cution parall√®le n'est possible entre deux cha√Ænes de n≈ìuds ‚è±Ô∏è √âvitez les logiques co√ªteuses ou les boucles trop grandes sans contr√¥le üß† Pensez √† is",
    "url": "/pages/editor_nodal.html#errors"
  },
  {
    "title": "üßµ Ex√©cution mono-thread",
    "content": "L'ex√©cution du LevelGraph se fait enti√®rement dans le fil principal du jeu, aussi appel√© thread principal. Cela signifie que chaque instruction nodale est trait√©e les unes apr√®s les autres, sans interruption ni ex√©cution en parall√®le. En pratique, cela veut dire que si une s√©rie de n≈ìuds prend trop de temps √† s'ex√©cuter (par exemple une boucle tr√®s longue), le jeu peut se figer temporairement , le temps que toute la cha√Æne soit parcourue. Aucune autre logique ou animation ne pourra s'ex√©cuter durant ce laps de temps. üü¢ Les ex√©cutions sont s√©quentielles : une instruction √† la fois üî¥ Aucune ex√©cution parall√®le n'est possible entre deux cha√Ænes de n≈ìuds ‚è±Ô∏è √âvitez les logiques co√ªteuses ou les boucles trop grandes sans contr√¥le üß† Pensez √† isoler des comportements complexes avec des Delay ou des s√©quences bien d√©coup√©es",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üîÅ Boucles infinies ?",
    "content": "En th√©orie, une boucle infinie est impossible : chaque node ne peut avoir qu'un seul pin exec entrant et sortant. Toutefois, soyez attentif √† vos logiques r√©p√©titives.",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üîä Syst√®me audio",
    "content": "Deux n≈ìuds permettent de jouer des sons : ‚Ä¢ Play Sound: joue un son brut ‚Ä¢ Emit Sound From: joue un son spatialis√© depuis unLocation Point",
    "url": "/pages/editor_nodal.html#audio"
  },
  {
    "title": "üß© Conditions de placement",
    "content": "Tous les n≈ìuds ne sont pas disponibles imm√©diatement : certains d√©pendent du contexte du niveau ou de la pr√©sence de certaines ressources. Ces restrictions √©vitent des erreurs lors de l'ex√©cution. Exemple : certains n≈ìuds comme Teleport sont d√©sactiv√©s tant qu'aucun point de localisation n'est plac√© sur la sc√®ne. ‚Ä¢ üîÄ Teleport: n√©cessite au moins unLocation Pointplac√© dans le niveau. ‚Ä¢ üéµ N≈ìuds Audio: pour utiliserPlay Sound,Emit Sound From, etc., il faut que des fichiers audio soient pr√©sents dans./Ressources/audio_files. ‚Ä¢ üîÅ Emit Sound From: d√©pend de la pr√©sence d'unLocation Pointdans la sc√®ne. Pour que les n≈ìuds audio puissent jouer des sons dans un niveau, les fichiers doivent √™tre plac√©s dans des dossiers sp√©cifiques. L'√©diteur les parcourt automatiquement pour alimenter le menu de s√©lection. ‚Ä¢ ./Ressources/audio_files‚Äî r√©pertoire principal pourvos sons personnalis√©s. Tous les fichiers audio ajout√©s ici seront disponibles dans l'√©diteur. ‚Ä¢ ./editor/game_engine/Assets/sounds_effects",
    "url": "/pages/editor_nodal.html#conditions"
  },
  {
    "title": "üîÑ Exemples fr√©quents",
    "content": "‚Ä¢ üîÄ Teleport: n√©cessite au moins unLocation Pointplac√© dans le niveau. ‚Ä¢ üéµ N≈ìuds Audio: pour utiliserPlay Sound,Emit Sound From, etc., il faut que des fichiers audio soient pr√©sents dans./Ressources/audio_files. ‚Ä¢ üîÅ Emit Sound From: d√©pend de la pr√©sence d'unLocation Pointdans la sc√®ne.",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üìÅ Emplacements des ressources",
    "content": "Pour que les n≈ìuds audio puissent jouer des sons dans un niveau, les fichiers doivent √™tre plac√©s dans des dossiers sp√©cifiques. L'√©diteur les parcourt automatiquement pour alimenter le menu de s√©lection. ‚Ä¢ ./Ressources/audio_files‚Äî r√©pertoire principal pourvos sons personnalis√©s. Tous les fichiers audio ajout√©s ici seront disponibles dans l'√©diteur. ‚Ä¢ ./editor/game_engine/Assets/sounds_effects‚Äî utilis√© exclusivement par lesniveaux d'exemplefournis avec l'√©diteur (par exemplenew_exemple.json). Il permet de s√©parer les ressources internes de d√©monstration des projets utilisateurs.",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üß© Cr√©er ses propres Custom Nodes",
    "content": "Le syst√®me nodal est extensible gr√¢ce aux Custom Nodes , que vous pouvez ajouter simplement en Python. Chaque n≈ìud personnalis√© h√©rite de la classe Node et est enregistr√© via le d√©corateur @register_node . @register_node(\"NomAffich√©\", category=\"MaCat√©gorie\") class MonNode(Node): def __init__(self, pos, editor, properties): super().__init__(pos, \"TitreDuNode\", editor, properties) # Ajouter des pins ici self.add_data_pin(\"nom\", is_output=False, default=0, label=\"Entr√©e\") def execute(self, context): # Code d'ex√©cution ici next_node = next((p.connection.node for p in self.outputs if p.pin_type == \"exec\"), None) return next_node # ou None si c'est un getter car pas de pin exec √† suivre Chaque n≈ìud h√©rite de Node et doit red√©finir la m√©thode execute(self, context) . Les sorties (appel√©es pins ) peuvent √™tre ajout√©es avec add_data_pin . Expose une valeur du jeu via un pin de sortie. @register_node(\"Get Score\", category=\"Custom\") class GetScore(Node): def __init__(self, pos, editor, properties",
    "url": "/pages/editor_nodal.html#custom-nodes"
  },
  {
    "title": "üîß Structure de base",
    "content": "@register_node(\"NomAffich√©\", category=\"MaCat√©gorie\") class MonNode(Node): def __init__(self, pos, editor, properties): super().__init__(pos, \"TitreDuNode\", editor, properties) # Ajouter des pins ici self.add_data_pin(\"nom\", is_output=False, default=0, label=\"Entr√©e\") def execute(self, context): # Code d'ex√©cution ici next_node = next((p.connection.node for p in self.outputs if p.pin_type == \"exec\"), None) return next_node # ou None si c'est un getter car pas de pin exec √† suivre Chaque n≈ìud h√©rite de Node et doit red√©finir la m√©thode execute(self, context) . Les sorties (appel√©es pins ) peuvent √™tre ajout√©es avec add_data_pin .",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üì§ Exemple 1 : Getter",
    "content": "Expose une valeur du jeu via un pin de sortie. @register_node(\"Get Score\", category=\"Custom\") class GetScore(Node): def __init__(self, pos, editor, properties): super().__init__(pos, \"Get Score\", editor, properties) self.inputs.clear() # Pas d'entr√©e self.outputs.clear() self.add_data_pin(\"score\", is_output=True, default=0, label=\"Score\") def execute(self, context): self.properties[\"score\"] = self.editor.game_state.get(\"player_score\", 0) return None",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üì• Exemple 2 : Setter",
    "content": "Re√ßoit une valeur via un pin d'entr√©e et l'enregistre. @register_node(\"Set Health\", category=\"Custom\") class SetHealth(Node): def __init__(self, pos, editor, properties): super().__init__(pos, \"Set Health\", editor, properties) self.add_data_pin(\"hp\", is_output=False, default=100, label=\"HP\") def execute(self, context): pin = next(p for p in self.inputs if p.name == \"hp\") value = pin.connection.node.properties[pin.connection.name] if pin.connection else self.properties[\"hp\"] self.editor.game_state[\"player_health\"] = int(value) return next((p.connection.node for p in self.outputs if p.pin_type == \"exec\"), None)",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "‚ñ∂Ô∏è Exemple 3 : Action",
    "content": "D√©clenche une animation ou effet sans manipulation de donn√©es. @register_node(\"Play Animation\", category=\"Custom\") class PlayAnim(Node): def __init__(self, pos, editor, properties): super().__init__(pos, \"Play Animation\", editor, properties) self.add_data_pin(\"anim_name\", is_output=False, default=\"idle\", label=\"Animation\") def execute(self, context): pin = next(p for p in self.inputs if p.name == \"anim_name\") name = pin.connection.node.properties[pin.connection.name] if pin.connection else self.properties[\"anim_name\"] self.editor.game_engine.play_animation(name) return next((p.connection.node for p in self.outputs if p.pin_type == \"exec\"), None)",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "üé¨ Exemple 4 : Action avec UI -Play Animation",
    "content": "Ce n≈ìud permet de jouer une animation pr√©d√©finie dans l'√©diteur. L'utilisateur peut s√©lectionner l'animation via une liste d√©roulante dynamique. ‚Ä¢ Affiche dynamiquement les animations disponibles √† partir du gestionnaire de l'√©diteur. ‚Ä¢ Joue l'animation s√©lectionn√©e lorsque le n≈ìud est ex√©cut√©. ‚Ä¢ Utilise unDropdownButtonpour l'UI. @register_node(\"Play Animation\", category=\"Animation\") class PlayAnimation(Node): def __init__(self, pos, editor, properties): super().__init__(pos, 'Play Animation', editor, properties) self.editor = editor # DropdownButton avec les noms des animations self.btn = DropdownButton( self, pygame.Rect(10, 30, 120, 24), list(self.editor.LevelEditor.animations.animations.keys()), callback=self._on_select ) # R√©utilisation d'un choix pr√©c√©dent if self.properties.get('choice'): self.btn.selected = self.properties['choice'] # Ajout √† l'UI self.ui_elements.append(self.btn) def _on_select(self, opt: str): self.properties['choice'] = opt def updateDropDownField(self): # ",
    "url": "/pages/editor_nodal.html"
  },
  {
    "title": "Vue d'ensemble de TileMapEditor",
    "content": "Voici un aper√ßu des quatre grands axes de TileMapEditor pour comprendre en un clin d'≈ìil ce que l'√©diteur permet de faire. Construisez vos cartes en pla√ßant des tuiles, en g√©rant les calques, en dessinant des zones de collision et en ajoutant des points de rep√®re pour guider le gameplay. ‚Ä¢ Placement de tuiles: dessinez directement sur la grille. ‚Ä¢ Layers: importez plusieurs TileMaps, superposez-les et ajustez leur opacit√©. ‚Ä¢ Collisions: d√©finissez des rectangles semi-transparents pour les interactions. ‚Ä¢ Points de rep√®re: placez des marqueurs (spawn, triggers) dans votre niveau. Animez vos tuiles gr√¢ce √† une timeline : cr√©ez, d√©placez et supprimez des keyframes, contr√¥lez la vitesse, la dur√©e et le comportement en boucle. ‚Ä¢ Timeline: organise par calque vos s√©quences d'animation. ‚Ä¢ Keyframes: posez-les librement pour d√©finir chaque √©tat des tiles. ‚Ä¢ Aper√ßu en temps r√©elpour affiner directement le rendu dans l'√©diteur. Testez instantan√©ment votre niveau avec un personnage configur√© : co",
    "url": "/pages/getting-started.html#overview"
  },
  {
    "title": "1. √âdition de niveau",
    "content": "Construisez vos cartes en pla√ßant des tuiles, en g√©rant les calques, en dessinant des zones de collision et en ajoutant des points de rep√®re pour guider le gameplay. ‚Ä¢ Placement de tuiles: dessinez directement sur la grille. ‚Ä¢ Layers: importez plusieurs TileMaps, superposez-les et ajustez leur opacit√©. ‚Ä¢ Collisions: d√©finissez des rectangles semi-transparents pour les interactions. ‚Ä¢ Points de rep√®re: placez des marqueurs (spawn, triggers) dans votre niveau.",
    "url": "/pages/getting-started.html#level-editing"
  },
  {
    "title": "2. Animations",
    "content": "Animez vos tuiles gr√¢ce √† une timeline : cr√©ez, d√©placez et supprimez des keyframes, contr√¥lez la vitesse, la dur√©e et le comportement en boucle. ‚Ä¢ Timeline: organise par calque vos s√©quences d'animation. ‚Ä¢ Keyframes: posez-les librement pour d√©finir chaque √©tat des tiles. ‚Ä¢ Aper√ßu en temps r√©elpour affiner directement le rendu dans l'√©diteur.",
    "url": "/pages/getting-started.html#animations-overview"
  },
  {
    "title": "3. Mode Play",
    "content": "Testez instantan√©ment votre niveau avec un personnage configur√© : collisions, d√©placements, animations et sauts sont g√©r√©s automatiquement. ‚Ä¢ D√©marrage rapide: lancez votre carte en un clic. ‚Ä¢ Param√®tres √† la vol√©e: ajustez gravit√©, vitesse, point d'apparition. ‚Ä¢ Mode fly: explorez librement pour rep√©rer les issues.",
    "url": "/pages/getting-started.html#playmode"
  },
  {
    "title": "4. √âditeur Nodal & Prototypage",
    "content": "Construisez la logique de votre jeu visuellement : connectez plus de 80 n≈ìuds pour g√©rer √©v√©nements, physique, IA ou audio. ‚Ä¢ Les n≈ìuds: chaque n≈ìud repr√©sente une action, un trigger ou un calcul. ‚Ä¢ Graphes modulaires: export ind√©pendamment des niveaux (.lvg). ‚Ä¢ Debug & validation: erreurs rep√©r√©es en temps r√©el dans l'√©diteur.",
    "url": "/pages/getting-started.html#node-editor-overview"
  },
  {
    "title": "Viewport",
    "content": "Le viewport est la zone principale o√π vous dessinez et naviguez dans votre carte. Vous pouvez : ‚Ä¢ Clic droit + glisser: d√©placer la vue ‚Ä¢ Molette: zoom avant/arri√®re ‚Ä¢ Shift + Clic gauche: s√©lectionner une zone ‚Ä¢ H: afficher/masquer la grille",
    "url": "/pages/interface.html#viewport"
  },
  {
    "title": "Tile Palette",
    "content": "La Tile Palette est l'espace d√©di√© √† la s√©lection des tuiles. Elle affiche les diff√©rentes TileMaps charg√©es, d√©coup√©es automatiquement en tuiles, que vous pouvez choisir pour les placer dans votre niveau. ‚Ä¢ Clic gauche: s√©lectionner une tuile ‚Ä¢ Clic droit + glisser: s√©lectionner une zone de tuiles ‚Ä¢ Molette: zoom / d√©-zoom dans la palette ‚Ä¢ Ctrl + Molette: agrandir ou r√©duire la taille d'affichage des tuiles (le canvas, pas le zoom) ‚Ä¢ Fl√®che gauche/droite: changer de TileMap active Ce syst√®me permet d'adapter visuellement la palette √† votre confort de travail sans modifier la r√©solution des tuiles utilis√©es dans le niveau.",
    "url": "/pages/interface.html#tilepalette"
  },
  {
    "title": "üì• Importer une TileMap",
    "content": "Pour ajouter une nouvelle TileMap dans l'√©diteur, suivez les √©tapes suivantes : ‚Ä¢ Allez dansFile > Open. ‚Ä¢ S√©lectionnez une image depuis votre disque (format PNG, JPG...). ‚Ä¢ Choisissez un nom unique pour cette TileMap. ‚Ä¢ D√©finissez la taille des tuiles (par exemple :16 x 16,32 x 32, etc.). ‚Ä¢ Un aper√ßu de la d√©coupe s'affiche automatiquement pour v√©rification. ‚Ä¢ (Optionnel) Activez laColor Keysi vous souhaitez rendre un fond transparent (utile pour certaines images). ‚Ä¢ Validez pour ajouter la TileMap dans la palette.",
    "url": "/pages/interface.html#import-tilemap"
  },
  {
    "title": "Layers",
    "content": "Les layers (couches) vous permettent de superposer plusieurs plans de tuiles : ‚Ä¢ 0 (arri√®re-plan) √† 8 (premier plan) ‚Ä¢ Fl√®ches ‚Üë/‚Üì: changer de layer ‚Ä¢ Slider dans la zone √©diting: Changer l'opacit√© pour voir √† travers les couches Vous √™tes pr√™t √† aller plus loin ? Explorez les fonctionnalit√©s de l'√©diteur √† travers les sections suivantes : ‚Ä¢ üéûÔ∏è Animations‚Äî Apprenez √† utiliser la timeline, cr√©er des keyframes et g√©rer les tiles anim√©es. ‚Ä¢ üéÆ Mode Play‚Äî Testez votre niveau avec un personnage contr√¥lable et configurez les param√®tres de simulation. ‚Ä¢ üß† √âditeur Nodal‚Äî Cr√©ez des logiques personnalis√©es avec un syst√®me de n≈ìuds visuels.",
    "url": "/pages/interface.html#layers"
  },
  {
    "title": "Outils",
    "content": "La barre d'outils vous permet d'interagir avec votre carte via diff√©rents modes : peinture, effacement, collision, points, lumi√®re, etc. S√©lectionnez un √©l√©ment (tile, collision, point, light) par clic droit, puis modifiez ses propri√©t√©s dans le panneau Editing (en haut √† gauche).",
    "url": "/pages/interface.html#tools"
  },
  {
    "title": "üñåÔ∏è Pinceau",
    "content": "Peindre des tuiles une √† une ou par gliss√©. ‚Ä¢ Zone: Viewport ‚Ä¢ Raccourci: clic gauche / glisser",
    "url": "/pages/interface.html"
  },
  {
    "title": "üßΩ Gomme",
    "content": "Supprimer des tuiles ou une s√©lection enti√®re. ‚Ä¢ Zone: Viewport ‚Ä¢ S√©lectionpossible",
    "url": "/pages/interface.html"
  },
  {
    "title": "ü™Ñ Remplissage",
    "content": "Inonder une zone avec la tuile s√©lectionn√©e (flood fill). ‚Ä¢ Zone: Viewport",
    "url": "/pages/interface.html"
  },
  {
    "title": "üé≤ Random",
    "content": "Planter des tuiles al√©atoires √† partir de votre s√©lection. ‚Ä¢ Zone: Palette + Viewport",
    "url": "/pages/interface.html"
  },
  {
    "title": "‚ÜîÔ∏è Flip",
    "content": "Retourner la s√©lection horizontalement ou verticalement.",
    "url": "/pages/interface.html"
  },
  {
    "title": "üîÑ Rotation",
    "content": "Pivoter la s√©lection (avant de la poser) par incr√©ments de 90¬∞.",
    "url": "/pages/interface.html"
  },
  {
    "title": "üìê Collision",
    "content": "Cr√©er et configurer des zones de collision rectangulaires. ‚Ä¢ Shift + Clic gauchepour s√©lectionner la zone ‚Ä¢ Propri√©t√©s :Type,Nom,Couleur",
    "url": "/pages/interface.html"
  },
  {
    "title": "üìå Points de rep√®re",
    "content": "Ajouter un marqueur de localisation (spawn, trigger, balise, etc.). ‚Ä¢ Propri√©t√©s :Type,Nom,Couleur ‚Ä¢ Pour le d√©finir comme spawn : s√©lectionnez-le puisSettings > Player Profile > Set Spawn Point",
    "url": "/pages/interface.html"
  },
  {
    "title": "üí° Light",
    "content": "Placer une source lumineuse en forme de disque. ‚Ä¢ Param√®tres :Rayon,Couleur,Blink ‚Ä¢ Visible siGlobal Illumination< 100% (Settings > World Settings)",
    "url": "/pages/interface.html"
  },
  {
    "title": "Prochaines √©tapes",
    "content": "Vous √™tes pr√™t √† aller plus loin ? Explorez les fonctionnalit√©s de l'√©diteur √† travers les sections suivantes : ‚Ä¢ üéûÔ∏è Animations‚Äî Apprenez √† utiliser la timeline, cr√©er des keyframes et g√©rer les tiles anim√©es. ‚Ä¢ üéÆ Mode Play‚Äî Testez votre niveau avec un personnage contr√¥lable et configurez les param√®tres de simulation. ‚Ä¢ üß† √âditeur Nodal‚Äî Cr√©ez des logiques personnalis√©es avec un syst√®me de n≈ìuds visuels.",
    "url": "/pages/interface.html#prochaine"
  },
  {
    "title": "Param√®tres",
    "content": "Cette section permet de configurer l'apparence globale du monde : ‚Ä¢ Global Illumination: Ajustable via un slider. Plus la valeur est √©lev√©e, plus le niveau est sombre. ‚Ä¢ Parallaxe: Choisissez un fond anim√© (parallax) ou une couleur unie. Les parallax sont d√©finis dans Assets/backgrounds.json . Voici un exemple de configuration : { \"name\": \"Apocalyptic\", \"type\": \"image\", \"bg_color\": [50, 40, 40], \"layers\": [ { \"path\": \"Assets/images/Parallax/Apocalyptic/1.png\", \"parallax\": 0.05 }, ... ] } { \"name\": \"Solid Gray\", \"type\": \"color\", \"color\": [200, 200, 200] } D√©finit les caract√©ristiques du joueur pour le mode Play : ‚Ä¢ Vitesse(Speed) ‚Ä¢ Gravit√©(Gravity) ‚Ä¢ Force de saut(Jump Force) ‚Ä¢ Can Fly: Activer pour permettre au joueur de voler (utile pour le debug) ‚Ä¢ Spawn Point: Vous devez avoir s√©lectionn√© unLocation Pointpuis cliquer surSet Spawn Point. Le point affichera alors des drapeaux crois√©s. Cette section permet d'afficher ou masquer certains √©l√©ments : ‚Ä¢ Display Lights: Affiche les sources ",
    "url": "/pages/settings.html#settings"
  },
  {
    "title": "üåç World Settings",
    "content": "Cette section permet de configurer l'apparence globale du monde : ‚Ä¢ Global Illumination: Ajustable via un slider. Plus la valeur est √©lev√©e, plus le niveau est sombre. ‚Ä¢ Parallaxe: Choisissez un fond anim√© (parallax) ou une couleur unie. Les parallax sont d√©finis dans Assets/backgrounds.json . Voici un exemple de configuration : { \"name\": \"Apocalyptic\", \"type\": \"image\", \"bg_color\": [50, 40, 40], \"layers\": [ { \"path\": \"Assets/images/Parallax/Apocalyptic/1.png\", \"parallax\": 0.05 }, ... ] } { \"name\": \"Solid Gray\", \"type\": \"color\", \"color\": [200, 200, 200] }",
    "url": "/pages/settings.html#world-settings"
  },
  {
    "title": "üë§ Player Profile",
    "content": "D√©finit les caract√©ristiques du joueur pour le mode Play : ‚Ä¢ Vitesse(Speed) ‚Ä¢ Gravit√©(Gravity) ‚Ä¢ Force de saut(Jump Force) ‚Ä¢ Can Fly: Activer pour permettre au joueur de voler (utile pour le debug) ‚Ä¢ Spawn Point: Vous devez avoir s√©lectionn√© unLocation Pointpuis cliquer surSet Spawn Point. Le point affichera alors des drapeaux crois√©s.",
    "url": "/pages/settings.html#player-profile"
  },
  {
    "title": "‚öôÔ∏è Param√®tres Avanc√©s",
    "content": "Cette section permet d'afficher ou masquer certains √©l√©ments : ‚Ä¢ Display Lights: Affiche les sources de lumi√®re ‚Ä¢ Show Collisions: Affiche les zones de collision ‚Ä¢ Show Location Points: Affiche les points de localisation ‚Ä¢ Display Grid: Affiche la grille d'√©dition ‚Ä¢ Display FPS: Affiche les performances de rendu ‚Ä¢ Keyframe Overlay: Affiche un surlignage jaune sur les tuiles avec animation D√©termine le niveau charg√© au d√©marrage : ‚Ä¢ Open NewExample: charge un nouveau niveau exemple ‚Ä¢ Open OldExample: charge l'ancien exemple ‚Ä¢ Empty Project: d√©marrage avec un projet vide ‚Ä¢ Open Last Level: recharge automatiquement le dernier niveau utilis√©(‚ö†Ô∏è √† √©viter en cas de crash)",
    "url": "/pages/settings.html#advanced"
  },
  {
    "title": "üß∞ Start Mode",
    "content": "D√©termine le niveau charg√© au d√©marrage : ‚Ä¢ Open NewExample: charge un nouveau niveau exemple ‚Ä¢ Open OldExample: charge l'ancien exemple ‚Ä¢ Empty Project: d√©marrage avec un projet vide ‚Ä¢ Open Last Level: recharge automatiquement le dernier niveau utilis√©(‚ö†Ô∏è √† √©viter en cas de crash)",
    "url": "/pages/settings.html#startmode"
  }
]